@using GameLogic
@using gmtk2020_blazor
@using gmtk2020_blazor.Helpers

@using Microsoft.AspNetCore.Components.Web

@if (ActiveGame.ViewportProcess == null)
{
    <label>loading..</label>
}
else
{
    <h2>User Input</h2>
    <div class="jumbotron mb-4">
        @if (ActiveGame.ViewportProcessState != null)
        {
            <i>running</i>
        }
        else if (ActiveGame.ViewportProcess.IsBackgroundProcess)
        {
            <i>@ActiveGame.ViewportProcessName is a background process..</i>
        }
        else
        {
            <div class="form-group" >
                <label for="prompt">@ActiveGame.ViewportProcess.Prompt</label>
                <input class="form-control my-2" id="prompt" @bind-value="Input" @bind-value:event="oninput" autocapitalize="off" autocorrect="off" autocomplete="off">
                <div>
                    <i>@ActiveGame.ViewportProcess.Instruction</i>
                </div>
            </div>
            <button class="btn btn-primary btn-lg my-4" @onclick="@(() => LaunchAction(Input?.ToUpper()))">Run Program</button>
        }
        <hr class="my-4"/>
    </div>
}





@inject BlazorTimer BlazorTimer
@code {



    [CascadingParameter]
    public IndexBase ActiveGame { get; set; }


    [Parameter]
    public bool BlockInput { get; set; }

    [Parameter]
    public Action<string> LaunchAction { get; set; }

    public string Input { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        ActiveGame.RunningStatusChanged += (sender, args) =>
        {
            this.StateHasChanged();
        };
    }


}
