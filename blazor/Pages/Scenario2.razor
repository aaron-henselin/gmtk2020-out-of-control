@page "/Scenario2"
@using GameLogic
@using Microsoft.AspNetCore.Components.Web
@inherits gmtk2020_blazor.IndexBase
@using gmtk2020_blazor.Helpers
@using gmtk2020_blazor.Shared.Components
@using Shared.Components

<CascadingValue Value="@this">
    <WinBanner />
</CascadingValue>

<div class="px-4">

    <OperatingSystemDrawer Scenario="@Scenario"></OperatingSystemDrawer>

    <div class="viewport">
        <h3>Scenario 2</h3>
        @{
            var winCondition = "Success is achieved when 'ACCESS GRANTED' is a line in the output";
        }
        <p>
            So far you've seen the general command 'PUT' which shifts bits around.
            Passwords however are validated using the ASSERT instruction, and the result ('ACCESS GRANTED' or 'ACCESS DENIED') is outputed.
            This program seems determined to only accept a valid password. See what you can do about that. @winCondition
        </p>

        <CascadingValue Value="@this">
            <TerminalViewport>
                <KeyboardEntry LaunchAction="@(x => this.Launch(x))"></KeyboardEntry>
            </TerminalViewport>
        </CascadingValue>

            <PrinterOutputDisplay Printer="@Scenario.Printer" WinCondition="@winCondition"></PrinterOutputDisplay>
      
    </div>
</div>



@code {

    @code {

        protected override async Task OnInitializedAsync()
        {
            await base.OnInitializedAsync();

            
        
            var package = await PackageDownloader.Download("2_whats_the_password");
            this.Scenario = new WhatsThePasswordScenario(package);
        }

    }

}
